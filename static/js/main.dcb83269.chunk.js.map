{"version":3,"sources":["Componentes/Bandeira/img/bandeira-brasil.svg","Componentes/Bandeira/img/bandeira-estados-unidos.png","Componentes/Sidebar/img/githubIcon.svg","serviceWorker.js","Componentes/Bandeira/Bandeira.js","Componentes/Sidebar/Sidebar.js","Componentes/LinhaSeparadora/LinhaSeparadora.js","Paginas/Home/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Bandeira","props","this","tipo","bandeiraBrasil","bandeiraEua","className","Image","src","tipoBandeira","fluid","Component","Sidebar","Nav","activeKey","Item","Link","href","iconeGithub","LinhaSeparadora","Home","state","linguagem","textos","0","1","mudaLinguagem","bind","opc","setState","console","log","Container","Row","Col","xs","onClick","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,qD,mBCA3CD,EAAOC,QAAU,IAA0B,wC,oMCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mKCgBSC,E,kDAzBb,WAAYC,GAAO,uCACXA,G,2DAKN,MAAuB,WAApBC,KAAKD,MAAME,KACLC,IAEmB,QAApBF,KAAKD,MAAME,KACVE,SADJ,I,+BAML,OACE,6BACE,yBAAKC,UAAU,YACb,kBAACC,EAAA,EAAD,CAAOC,IAAKN,KAAKO,eAAgBC,OAAK,U,GAnBzBC,a,iBCgCRC,E,kDA7Bb,WAAYX,GAAO,uCACXA,G,qDAKN,OACE,6BACE,kBAACY,EAAA,EAAD,CAAKP,UAAU,sCAAsCQ,UAAU,SAC7D,yBAAKR,UAAU,mBACf,kBAACO,EAAA,EAAIE,KAAL,KACE,kBAAC,EAAD,CAAUZ,KAAK,WACf,kBAAC,EAAD,CAAUA,KAAK,SAEjB,kBAACU,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,CAAUC,KAAK,aAAaX,UAAU,cAAtC,iBAEF,kBAACO,EAAA,EAAIE,KAAL,KACE,kBAACF,EAAA,EAAIG,KAAL,CAAUC,KAAK,YAAYX,UAAU,cAArC,gBAEF,kBAACO,EAAA,EAAIE,KAAL,KACE,yBAAKP,IAAKU,a,GAtBAP,aCQPQ,G,wDAdb,WAAYlB,GAAO,uCACXA,G,qDAKN,OACE,6BACE,wBAAIK,UAAU,yB,GATQK,cCoGfS,E,kDA3Fb,WAAYnB,GAAO,IAAD,8BAChB,cAAMA,IAEDoB,MAAQ,CACXC,UAAW,EACXC,OAAQ,CACNC,EAAG,CACC,aAAgB,2CAChB,eAAkB,WAClB,qBAAwB,qBACxB,eAAkB,aAClB,eAAkB,YAClB,SAAY,uBAEhBC,EAAG,CACC,aAAgB,sCAChB,eAAkB,YAClB,qBAAwB,aACxB,eAAkB,aAClB,eAAkB,cAK1B,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBAxBL,E,0DA2BJC,GACZ1B,KAAK2B,SAAS,CAACP,UAAWM,IAC1BE,QAAQC,IAAIH,K,+BAGL,IAAD,OACN,OACE,6BACE,kBAACI,EAAA,EAAD,CAAWtB,OAAK,EAACJ,UAAU,oBACzB,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,QAAS,kBAAM,EAAKV,cAAc,KAC5C,kBAAC,EAAD,OAEF,kBAACQ,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,6BACA,wBAAI5B,UAAU,aACXJ,KAAKmB,MAAME,OAAOrB,KAAKmB,MAAMC,WAA7B,gBAIP,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,QAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,gEAGA,6BACA,8BACGhC,KAAKmB,MAAME,OAAOrB,KAAKmB,MAAMC,WAA7B,eADH,oBAIA,6BACA,8BACGpB,KAAKmB,MAAME,OAAOrB,KAAKmB,MAAMC,WAA7B,qBADH,KAEKpB,KAAKmB,MAAME,OAAOrB,KAAKmB,MAAMC,WAA7B,kBAIT,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,QAGJ,kBAACD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BACGhC,KAAKmB,MAAME,OAAOrB,KAAKmB,MAAMC,WAA7B,0B,GAhFFX,aCHnB0B,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,aAAaC,UAAarB,IAC9C,kBAAC,IAAD,CAAOkB,OAAU,kBAAM,6BAAK,gCAAQ,2DAGxCI,SAASC,eAAe,SLoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrB,QAAQqB,MAAMA,EAAMC,c","file":"static/js/main.dcb83269.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bandeira-brasil.aa1e61da.svg\";","module.exports = __webpack_public_path__ + \"static/media/bandeira-estados-unidos.4e06c506.png\";","module.exports = __webpack_public_path__ + \"static/media/githubIcon.b53ff55e.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nimport Image from \"react-bootstrap/Image\";\n\nimport bandeiraBrasil from \"./img/bandeira-brasil.svg\";\nimport bandeiraEua from \"./img/bandeira-estados-unidos.png\";\n\nclass Bandeira extends Component{\n  constructor(props){\n    super(props);\n\n  }\n\n  tipoBandeira(){\n    if(this.props.tipo === \"brasil\"){\n      return bandeiraBrasil;\n    }\n    else if(this.props.tipo === \"eua\"){\n      return bandeiraEua;\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"bandeira\">\n          <Image src={this.tipoBandeira()} fluid/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Bandeira;\n","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Nav from \"react-bootstrap/Nav\";\n\nimport Bandeira from \"../../Componentes/Bandeira/Bandeira.js\";\n\nimport iconeGithub from \"./img/githubIcon.svg\";\n\nclass Sidebar extends Component{\n  constructor(props){\n    super(props);\n\n  }\n\n  render(){\n    return(\n      <div>\n        <Nav className=\"col-md-12 d-none d-md-block sidebar\" activeKey=\"/home\">\n          <div className=\"sidebar-sticky\"></div>\n          <Nav.Item>\n            <Bandeira tipo=\"brasil\" />\n            <Bandeira tipo=\"eua\" />\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/curriculo\" className=\"text-light\">Currículo</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link href=\"/porfolio\" className=\"text-light\">Porfólio</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <img src={iconeGithub}/>\n          </Nav.Item>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, {Component} from \"react\";\nimport \"./style.css\";\n\nclass LinhaSeparadora extends Component{\n  constructor(props){\n    super(props);\n\n  }\n\n  render(){\n    return(\n      <div>\n        <hr className=\"linhaSeparadora\"/>\n      </div>\n    );\n  }\n}\n\nexport default LinhaSeparadora;\n","import React, {Component} from \"react\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Sidebar from \"../../Componentes/Sidebar/Sidebar.js\";\nimport LinhaSeparadora from \"../../Componentes/LinhaSeparadora/LinhaSeparadora.js\";\n\nclass Home extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      linguagem: 0,\n      textos: {\n        0: {\n            \"tituloPagina\": \"Currículo de Matheus Wilhelm Siqueira\",\n            \"tituloTelefone\": \"Telefone\",\n            \"tituloDataNascimento\": \"Data de Nascimento\",\n            \"dataNascimento\": \"30/08/1998\",\n            \"tituloSobreMim\": \"Sobre mim\",\n            \"sobreMim\": \"Nascido em Curitiba\"\n        },\n        1: {\n            \"tituloPagina\": \"Matheus Wilhelm Siqueira Curriculum\",\n            \"tituloTelefone\": \"Telephone\",\n            \"tituloDataNascimento\": \"Birth Date\",\n            \"dataNascimento\": \"08/30/1998\",\n            \"tituloSobreMim\": \"About me\"\n        }\n      }\n    };\n\n    this.mudaLinguagem = this.mudaLinguagem.bind(this);\n  }\n\n  mudaLinguagem(opc){\n    this.setState({linguagem: opc});\n    console.log(opc);\n  }\n\n  render(){\n    return(\n      <div>\n        <Container fluid className=\"containerSidebar\">\n          <Row>\n            <Col xs={3} onClick={() => this.mudaLinguagem(1)}>\n              <Sidebar />\n            </Col>\n            <Col>\n              <Row>\n                <Col>\n                  <br/>\n                  <h2 className=\"text-dark\">\n                    {this.state.textos[this.state.linguagem][\"tituloPagina\"]}\n                  </h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <LinhaSeparadora/>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <span>\n                    E-mail: siqueirawm@hotmail.com\n                  </span>\n                  <br/>\n                  <span>\n                    {this.state.textos[this.state.linguagem][\"tituloTelefone\"]}\n                    : (41)99144-3360\n                  </span>\n                  <br/>\n                  <span>\n                    {this.state.textos[this.state.linguagem][\"tituloDataNascimento\"]}\n                    : {this.state.textos[this.state.linguagem][\"dataNascimento\"]}\n                  </span>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <LinhaSeparadora/>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h3>\n                    {this.state.textos[this.state.linguagem][\"tituloSobreMim\"]}\n                  </h3>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\n\nimport Home from \"./Paginas/Home\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route exact path = \"/curriculo\" component = {Home}/>\n      <Route render = {() => <div><center><h1>404 Error: Not Found</h1></center></div>}/>\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}